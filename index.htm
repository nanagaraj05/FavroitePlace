<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Favorite Places Tracker</title>
<script src="https://cdn.tailwindcss.com"></script>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&display=swap" rel="stylesheet">
<style>
body { font-family: 'Inter', sans-serif; background-color: #f8fafc; }
input[type="file"] { cursor: pointer; }
</style>
</head>
<body>
<div class="max-w-4xl mx-auto p-4 sm:p-6 lg:p-8">

    <header class="text-center mb-8">
        <h1 class="text-4xl font-extrabold text-gray-900 sm:text-5xl tracking-tight">
            üåç My Favorite Places
        </h1>
    </header>

    <!-- Auth Section -->
    <div id="auth-box" class="bg-white shadow-xl rounded-xl p-6 mb-10 border border-gray-100 space-y-4">
        <h2 class="text-2xl font-semibold text-gray-700">Sign Up / Login</h2>
        <input type="text" id="name-input" placeholder="Name (Sign Up only)" class="w-full p-3 border border-gray-300 rounded-lg mb-2">
        <input type="email" id="email-input" placeholder="Email" class="w-full p-3 border border-gray-300 rounded-lg mb-2">
        <input type="password" id="password-input" placeholder="Password" class="w-full p-3 border border-gray-300 rounded-lg mb-2">
        <div class="flex gap-2">
            <button id="signup-button" class="w-1/2 px-6 py-3 text-white font-semibold rounded-lg shadow-md bg-green-600 hover:bg-green-700 transition duration-150">
                Sign Up
            </button>
            <button id="login-button" class="w-1/2 px-6 py-3 text-white font-semibold rounded-lg shadow-md bg-blue-600 hover:bg-blue-700 transition duration-150">
                Login
            </button>
        </div>
    </div>

    <!-- Add Place Form -->
    <form id="add-place-form" class="bg-white shadow-xl rounded-xl p-6 mb-10 border border-gray-100 space-y-4 hidden">
        <h2 class="text-2xl font-semibold text-gray-700">Add a New Spot</h2>
        <div>
            <label for="place-name" class="block text-sm font-medium text-gray-700 mb-1">Place Name</label>
            <input type="text" id="place-name" required placeholder="E.g., Grand Canyon"
                   class="w-full p-3 border border-gray-300 rounded-lg">
        </div>
        <div>
            <label for="place-image" class="block text-sm font-medium text-gray-700 mb-1">Upload Photo</label>
            <input type="file" id="place-image" accept="image/*"
                   class="w-full p-3 border border-gray-300 rounded-lg">
        </div>
        <button type="submit" class="w-full px-6 py-3 text-white font-semibold rounded-lg shadow-md bg-blue-600 hover:bg-blue-700 transition duration-150">
            Add Place
        </button>
    </form>

    <!-- Places List -->
    <section id="places-section" class="hidden">
        <h2 class="text-2xl font-semibold mb-5 text-gray-700">Your Saved Places</h2>
        <div id="places-list" class="grid grid-cols-1 sm:grid-cols-2 gap-6"></div>
        <button id="logout-button" class="mt-6 px-6 py-3 text-white font-semibold rounded-lg shadow-md bg-red-600 hover:bg-red-700 transition duration-150">
            Logout
        </button>
    </section>
</div>

<script type="module">
import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-app.js";
import { getFirestore, collection, query, where, getDocs, addDoc, deleteDoc, doc, onSnapshot, serverTimestamp } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-firestore.js";

// Firebase config
const firebaseConfig = {
  apiKey: "AIzaSyBLBN7IVVlqml69b0PjP1fTCLOAYYwB_64",
  authDomain: "cloud-eea37.firebaseapp.com",
  projectId: "cloud-eea37",
  storageBucket: "cloud-eea37.firebasestorage.app",
  messagingSenderId: "310055352435",
  appId: "1:310055352435:web:01e0cb50ff88d5ba3f5206"
};
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// DOM
const authBox = document.getElementById("auth-box");
const nameInput = document.getElementById("name-input");
const emailInput = document.getElementById("email-input");
const passwordInput = document.getElementById("password-input");
const signupButton = document.getElementById("signup-button");
const loginButton = document.getElementById("login-button");
const addPlaceForm = document.getElementById("add-place-form");
const placesSection = document.getElementById("places-section");
const placesList = document.getElementById("places-list");
const logoutButton = document.getElementById("logout-button");
const placeNameInput = document.getElementById("place-name");
const placeImageInput = document.getElementById("place-image");

let currentUserId = null;

// --- Utility ---
function fileToBase64(file) {
    return new Promise((resolve, reject) => {
        if (!file) return resolve('');
        const reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = () => resolve(reader.result);
        reader.onerror = err => reject(err);
    });
}

// --- Sign Up ---
signupButton.addEventListener("click", async () => {
    const name = nameInput.value.trim();
    const email = emailInput.value.trim();
    const password = passwordInput.value.trim();
    if (!name || !email || !password) return alert("Fill all fields");

    // Check if email exists
    const q = query(collection(db,"users"), where("email","==",email));
    const snapshot = await getDocs(q);
    if (!snapshot.empty) return alert("Email already exists!");

    // Save user in Firestore
    const docRef = await addDoc(collection(db,"users"), { name, email, password });
    currentUserId = docRef.id;
    showAppUI();
});

// --- Login ---
loginButton.addEventListener("click", async () => {
    const email = emailInput.value.trim();
    const password = passwordInput.value.trim();
    if (!email || !password) return alert("Fill email and password");

    const q = query(collection(db,"users"), where("email","==",email), where("password","==",password));
    const snapshot = await getDocs(q);
    if (snapshot.empty) return alert("Invalid credentials");

    const userDoc = snapshot.docs[0];
    currentUserId = userDoc.id;
    showAppUI();
});

// --- Show app after login ---
function showAppUI() {
    authBox.classList.add("hidden");
    addPlaceForm.classList.remove("hidden");
    placesSection.classList.remove("hidden");
    loadPlaces();
}

// --- Logout ---
logoutButton.addEventListener("click", () => {
    currentUserId = null;
    authBox.classList.remove("hidden");
    addPlaceForm.classList.add("hidden");
    placesSection.classList.add("hidden");
    placesList.innerHTML = '';
});

// --- Add Place ---
addPlaceForm.addEventListener("submit", async e => {
    e.preventDefault();
    if (!currentUserId) return alert("Not logged in");
    const name = placeNameInput.value.trim();
    const file = placeImageInput.files[0];
    if (!name) return alert("Enter place name");

    const imageBase64 = await fileToBase64(file);
    await addDoc(collection(db,"users",currentUserId,"favorite_places"), { name, image: imageBase64, createdAt: serverTimestamp() });
    placeNameInput.value = "";
    placeImageInput.value = "";
});

// --- Load Places ---
function loadPlaces() {
    const q = collection(db,"users",currentUserId,"favorite_places");
    onSnapshot(q, snapshot => {
        placesList.innerHTML = "";
        snapshot.docs.forEach(docSnap => {
            const data = docSnap.data();
            const div = document.createElement("div");
            div.className = "bg-white p-4 rounded-xl shadow flex flex-col";
            div.innerHTML = `
                <p class="font-bold">${data.name}</p>
                ${data.image ? `<img src="${data.image}" class="mt-2 rounded" style="height:150px;object-fit:cover;">` : ""}
                <button class="mt-2 bg-red-500 text-white px-3 py-1 rounded" data-id="${docSnap.id}">Delete</button>
            `;
            placesList.appendChild(div);

            div.querySelector("button").addEventListener("click", async () => {
                await deleteDoc(doc(db,"users",currentUserId,"favorite_places",docSnap.id));
            });
        });
    });
}
</script>
</body>
</html>
